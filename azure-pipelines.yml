trigger:
- master

variables:
  DEPOT_TOOLS_WIN_TOOLCHAIN: '0'
  DEPOT_TOOLS_METRICS: '0'
  PYTHON_HOME: ''
  ANGLE_REVISION: 'f8bb908702bd5a0b8ce4ae0b109efdbc78afbf2b'

jobs:
- job: Build_ANGLE
  timeoutInMinutes: 0
  pool:
   vmImage: 'windows-2019'
  steps:
  - powershell: |
      Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-infra/depot_tools.zip" -OutFile depot_tools.zip
      &7z x depot_tools.zip -odepot_tools
      Remove-Item depot_tools.zip
    displayName: 'Fetch depot_tools'
  
  - powershell: |
      $env:DEPOT_TOOLS_WIN_TOOLCHAIN=0
      $env:Path = "$pwd\depot_tools;" + $env:Path
      cd depot_tools
      ./update_depot_tools.bat
      dir
    displayName: 'Config depot_tools'
  
  - script: |
      del C:\ProgramData\Chocolatey\bin\pytho*.exe
      git clone https://chromium.googlesource.com/angle/angle
      cd angle
    displayName: 'Fetch angle repo'

  - powershell: |
      choco install llvm 2>&1>$null
      $env:DEPOT_TOOLS_WIN_TOOLCHAIN=0
      $env:Path = "$pwd\depot_tools;" + $env:Path
      refreshenv
      cd angle
      python scripts\bootstrap.py
      refreshenv
      gclient sync --revision=$(ANGLE_REVISION)
    displayName: 'Setup angle deps'

  - script: |
      set PATH=%cd%\depot_tools;%PATH%;
      cd angle
    displayName: 'Sync angle'

  - powershell: |
      $env:DEPOT_TOOLS_WIN_TOOLCHAIN=0
      $env:Path = "$pwd\depot_tools;" + $env:Path
      cd angle
      gn gen out/Build_32 --args='angle_build_all=false is_clang=true target_cpu=\"x86\"' --ide=vs
      gn gen out/Build_64 --args='angle_build_all=false is_clang=true target_cpu=\"x64\"' --ide=vs
    displayName: 'Setup build projects'

  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"
      cd angle
      msbuild out\Build_64\obj\libANGLE.vcxproj /m
      msbuild out\Build_64\obj\libEGL.vcxproj /m
      msbuild out\Build_64\obj\libGL.vcxproj /m
      msbuild out\Build_64\obj\libGLESv1_CM.vcxproj /m
      msbuild out\Build_64\obj\libGLESv2.vcxproj /m
      msbuild out\Build_32\obj\libANGLE.vcxproj /m
      msbuild out\Build_32\obj\libEGL.vcxproj /m
      msbuild out\Build_32\obj\libGL.vcxproj /m
      msbuild out\Build_32\obj\libGLESv1_CM.vcxproj /m
      msbuild out\Build_32\obj\libGLESv2.vcxproj /m
    displayName: 'Build ANGLE'

  - powershell: |
      New-Item -Name "x64" -ItemType "directory" 
      New-Item -Name "x86" -ItemType "directory"
      New-Item -Name "lib" -ItemType "directory"
      New-Item -Name "Binaries" -ItemType "directory"
      Copy-Item -Path "angle\out\Build_64\*.lib" -Destination "x64" -Recurse 
      Copy-Item -Path "angle\out\Build_64\*.dll" -Destination "x64" -Recurse 
      Copy-Item -Path "angle\out\Build_64\*.pdb" -Destination "x64" -Recurse 
      Copy-Item -Path "angle\out\Build_32\*.pdb" -Destination "x86" -Recurse 
      Copy-Item -Path "angle\out\Build_32\*.lib" -Destination "x86" -Recurse 
      Copy-Item -Path "angle\out\Build_32\*.dll" -Destination "x86" -Recurse 
      Move-Item -Path "x64" -Destination "lib"
      Move-Item -Path "x86" -Destination "lib"
      Move-Item -Path "lib" -Destination "Binaries"
      Copy-Item -Path "angle\include" -Destination "Binaries" -Recurse 
      7z a ANGLE.zip Binaries\*
    displayName: 'Copy Binaries'

  - publish: $(Build.SourcesDirectory)/ANGLE.zip
    artifact: ANGLE Binaries

  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'msmshazan Github PAT'
      repositoryName: 'msmshazan/anglebuild'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: 'Release-$(ANGLE_REVISION)'
      title: 'ANGLE Binaries'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
      assets: '$(Build.SourcesDirectory)/ANGLE.zip'
